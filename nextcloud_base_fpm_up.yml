- name: playbook generated by doco2podans to install Nextcloud
  hosts: all
  gather_facts: false
  become: true  # we don't expect most docker compose to work without root

  tasks:
    - name: make sure podman is present
      package:
        name:
          - podman
          - podman-plugins
        state: present
    - name: make sure nginx.conf is present
      copy:
        src: nextcloud_nginx.conf
        dest: /srv/nextcloud_nginx.conf
    - name: deploy volume nextcloud
      containers.podman.podman_volume:
        name: nextcloud
    - name: deploy volume db
      containers.podman.podman_volume:
        name: db
    - name: deploy network nw-app-db-web
      containers.podman.podman_network:
        name: nw-app-db-web
    - name: deploy container db
      containers.podman.podman_container:
        name: db
        image: docker.io/library/mariadb:10.5
        restart_policy: always
        command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
        volumes:
        - db:/var/lib/mysql:Z
        env:
          MYSQL_ROOT_PASSWORD: changeme
          MYSQL_PASSWORD: changeme
          MYSQL_DATABASE: nextcloud
          MYSQL_USER: nextcloud
        network: nw-app-db-web
    - name: deploy container app
      containers.podman.podman_container:
        name: app
        image: docker.io/library/nextcloud:fpm
        restart_policy: always
        volumes:
        - nextcloud:/var/www/html:z
        env:
          MYSQL_PASSWORD: changeme
          MYSQL_DATABASE: nextcloud
          MYSQL_USER: nextcloud
          MYSQL_HOST: db
        network: nw-app-db-web
    - name: deploy container web
      containers.podman.podman_container:
        name: web
        image: docker.io/library/nginx
        restart_policy: always
        ports:
        - 8080:80
        volumes:
        - /srv/nextcloud_nginx.conf:/etc/nginx/nginx.conf:ro,Z
        volumes_from:
        - app
        network: nw-app-db-web
    - name: make sure firewalld is present
      package:
        name:
          - firewalld
          - python3-firewall
        state: present
    - name: open firewall
      ansible.posix.firewalld:
        immediate: true
        permanent: true
        port: 8080/tcp
        state: enabled
